buildscript {
    ext {
        kotlinVersion = '1.2.51'
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        // add docker dependency
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE")
        // using Gradle you need to add a new docker plugin like this:
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse-wtp'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
// apply this docker plugin
apply plugin: 'docker'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

repositories {
    mavenCentral()
}

configurations {
    providedRuntime
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    compile("org.jetbrains.kotlin:kotlin-reflect")
    providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

// write this docker build task, this will run just after "./gradlew build" command
task buildDocker(type: Docker, dependsOn: build) {
    push = true
    applicationName = bootJar.baseName
    dockerfile = file('Dockerfile')
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}
// import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

// plugins {
// 	id("org.springframework.boot") version "2.1.5.RELEASE"
// 	id("io.spring.dependency-management") version "1.0.7.RELEASE"
// 	kotlin("jvm") version "1.2.71"
// 	kotlin("plugin.spring") version "1.2.71"
// }

// group = "shunp"
// version = "0.0.1-SNAPSHOT"
// java.sourceCompatibility = JavaVersion.VERSION_1_8

// repositories {
// 	mavenCentral()
// }

// dependencies {
// 	implementation("org.springframework.boot:spring-boot-starter-web")
// 	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
// 	implementation("org.jetbrains.kotlin:kotlin-reflect")
// 	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
// 	implementation("org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE")
// 	implementation("se.transmode.gradle:gradle-docker:1.2")
// 	testImplementation("org.springframework.boot:spring-boot-starter-test")
// }

// tasks.withType<KotlinCompile> {
// 	kotlinOptions {
// 		freeCompilerArgs = listOf("-Xjsr305=strict")
// 		jvmTarget = "1.8"
// 	}
// }

// // write this docker build task, this will run just after "./gradlew build" command
// task buildDocker(type: Docker, dependsOn: build) {
//     push = true
//     applicationName = bootJar.baseName
//     dockerfile = file('Dockerfile')
//     doFirst {
//         copy {
//             from jar
//             into stageDir
//         }
//     }
// }

